name: Production Jeannot Deployment
run-name: ${{ github.actor }} is deploying Jeannot Website on production with GitHub Actions ðŸš€
on:
  push:
    branches:
      - main
jobs:
  Compilation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: project_pre
          path: .
  Deployment:
    needs: Compilation
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts from previous step(s)
        uses: actions/download-artifact@v4
        with:
          name: project_pre
      # - name: Checkout the repository
      #   uses: actions/checkout@v4
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ vars.DOCKER_REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          username: ${{ vars.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PWD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ vars.DOCKER_REGISTRY }}
          tags: |
            type=ref,event=branch,prefix=${{ vars.IMAGE_NAME }}-

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ vars.MAIN_SERVER_HOST }}
          username: ${{ vars.SSH_MAIN_SERVER_USERNAME }}
          password: ${{ secrets.SSH_MAIN_SERVER_PWD }}
          port: ${{ vars.MAIN_SERVER_SOCKET }}
          script: sudo /home/cicd/reload-containers.sh
